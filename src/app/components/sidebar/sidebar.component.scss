@use 'sass:color';
@use 'pattern/colors';
@use 'pattern/mixins';
@use 'pattern/typography';
@use 'pattern/utility';

:host {
  width: 100%;
  display: flex;
  flex-direction: column;
  padding-top: utility.get-rem(24);
  background-color: colors.get-color('DarkBlue');

  @include mixins.respond-to(tablet) {
    padding-top: utility.get-rem(10);
  }
}

aside {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}

nav {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: utility.get-rem(16);
  padding: 0 utility.get-rem(12);
  margin-bottom: utility.get-rem(10);
}

tr {
  width: calc(100% - (2 * utility.get-rem(12)));
  border-top: 1px solid color.scale(colors.get-color('UiWhite'), $alpha: -80%);
}

img {
  height: utility.get-rem(32);
  width: utility.get-rem(76);
}

.grouping {
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: utility.get-rem(8);
}

.logo {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 utility.get-rem(24);
  margin-bottom: utility.get-rem(48);

  @include mixins.respond-to(tablet) {
    margin-bottom: utility.get-rem(40);
  }

  .close {
    display: none;
    
    @include mixins.respond-to(tablet) {
      display: flex;
    }
  }
}

.support {
  display: flex;
  padding: utility.get-rem(12);
  margin-top: auto;
  background-color: color.scale(colors.get-color('UiWhite'), $alpha: -80%);
}

p-button.p-element:not(.close) {
  &:hover {
    background-color: color.scale(colors.get-color('UiWhite'), $alpha: -92%);
    opacity: 1;
    cursor: pointer;
  }

  &.is-active {
    background-color: color.scale(colors.get-color('UiWhite'), $alpha: -85%);
    opacity: 1;
  }
}

p-button.p-element:not(.close)::ng-deep {
  height: utility.get-rem(38);
  display: flex;
  padding: 0 utility.get-rem(12);
  border-radius: 10px;
  opacity: 0.8;

  .p-button-text {
    @extend %#{typography.$text-1-pattern};
    font-weight: 700;
    display: flex;
    gap: utility.get-rem(10);
    padding: 0;
    color: colors.get-color('UiWhite');

    &:disabled {
      color: colors.get-color('DisabledGrey10');
      opacity: 1;
    }
  }

  .p-button-icon {
    font-size: utility.get-rem(20);
    margin: 0;
  }
}

p-button.p-element.close::ng-deep {
  .p-button-text {
    padding: 0;
    color: colors.get-color('UiWhite');
  }
  
  .p-button-icon {
    font-size: utility.get-rem(24);
  }
}