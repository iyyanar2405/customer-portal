@use 'sass:color';
@use 'pattern/colors';
@use 'pattern/mixins';
@use 'pattern/typography';
@use 'pattern/utility';

.badge {
    @extend %#{typography.$text-xs-pattern};
    position: absolute;
    top: 5px;
    right: 5px;
    height: utility.get-rem(16);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    padding: 0 utility.get-rem(5);
    background-color: colors.get-color('LandGreen');
    color: colors.get-color('UiWhite');
}

p-button.p-element {
    border-radius: 10px;
    position: relative;
    display: flex;

    &:hover {
        background-color: color.scale(colors.get-color('DarkBlue'), $alpha: -98%);
        cursor: pointer;
    }

    &.is-active {
        background-color: color.scale(colors.get-color('DarkBlue'), $alpha: -94%);
    }
}

.p-button-text {
    @extend %#{typography.$text-1-pattern};
    display: flex;
    gap: utility.get-rem(6);
    color: colors.get-color('DarkBlue');

    &:hover {
        background-color: transparent;
    }

    &:disabled {
        color: colors.get-color('DisabledGrey10');
    }

    @include mixins.respond-to(tablet) {
        background-color: colors.get-color('DarkBlue');
        color: colors.get-color('UiWhite');
    }

    @include mixins.respond-to(phone) {
        gap: 0;
    }

    .p-button-label {
        @include mixins.respond-to(phone) {
            display: none;
        }
    }

    .p-button-icon {
        font-size: utility.get-rem(15);
        margin: 0;
    }
}

// Mobile text visibility
.has-mobile-text::ng-deep .p-button-label {
    @include mixins.respond-to(phone) {
        display: inline !important;
    }
}